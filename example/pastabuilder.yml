---
# stage
- stage: e1
  about: Описание этапа 1
  steps:
    - step: Имя шага может быть любым №1
      about: Импорт данных из проекта
      class: import
      exclude:
        - "obj/"
    - step: Имя шага должно быть обязательнj №2
      about: Этот шаг ничего не делает 
      class: empty
    - step: Это помогает от лени №3
      about: Этот шаг ничего не делает, но отображает пути к кешу и срабатывает их автосоздание
      class: helloworld
    - step: Накладываем патч
      class: patch
      src: "p*.patch"
      # Нужна, если патч накладывается не на всю папку этапа
      # dest: ""
  # Код этапа должен быть строкой из маленьких латинцей
- stage: e2
  steps: 
    - step: Забираем результаты предыдущего шага, кроме файла .gitignore
      class: copyfromstage
      stagesrc: e1
      # Кроме файла .gitignore
      exclude:
        - ".gitignore"

    - step: 4
      class: download
      #url: https://www.opentechnology.ru/sites/default/files/sitefiles/b152clients_20161003.pdf
      url: https://download.moodle.org/download.php/direct/langpack/4.1/ru.zip
      # Архиватр none/zip/tar.gz
      archive: zip
      subfoldersrc: ru
      subfolderdest: rrr

    - step: Скачиваем пакет из composer c указанием версии
      class: composer
      do: create-project
      package: monolog/monolog:1.0.*
      subfolderdest: monolog
     
      
    - step: Скачиваем пакет из composer без указания версии
      about: https://www.drupal.org/project/drupal/releases/11.0.0
      class: composer
      do: create-project
      package: drupal/recommended-project
      subfolderdest: drupallast

- stage: drupal
  about: Собираем drupal
  steps:
    - step: Скачиваем пакет из composer версия 11.1.1
      class: composer
      do: create-project
      package: drupal/recommended-project:11.1.1
      
    - step: Добавляем в пакет drush
      class: composer
      do: require
      package: drush/drush
      
      
- stage: e3
  about: Описание этапа 3
  steps:
    - step: Забираем сборку из предыдущего этапа, кроме файлов с патчами
      class: copyfromstage
      stagesrc: e2
      exclude:
        - "p*.patch"

    - step: Копирум файлы drupal/htdocs
      class: copyfromstage
      stagesrc: drupal
      subfoldersrc: web
      subfolderdest: htdocs
      
    - step: Копирум файлы drupal/vendor
      class: copyfromstage
      stagesrc: drupal
      subfoldersrc: vendor
      subfolderdest: vendor

    - step: Копирум файлы drupal/recipes
      class: copyfromstage
      stagesrc: drupal
      subfoldersrc: recipes
      subfolderdest: recipes
      
        
    - step: Скачиваем и распаковываем в корень tar.gz. 
      class: download
      url: https://github.com/hufrea/byedpi/releases/download/v0.15/byedpi-15-x86_64.tar.gz
      archive: tar.gz
      # Оставляем файлы, которые уже были в корне этапа
      cleanunexisted: 0
    - step: Скачиваем тот же файл, но не распаковываем, а просто кладем его в корень под другим именем
      class: download
      url: https://github.com/hufrea/byedpi/releases/download/v0.15/byedpi-15-x86_64.tar.gz
      archive: none
      subfolderdest: test.tar.gz
    - step: Скачиваем еще раз и кладем в папку aaa/bbb
      class: download
      url: https://github.com/hufrea/byedpi/releases/download/v0.15/byedpi-15-x86_64.tar.gz
      archive: none
      subfolderdest: aaa/bbb/test.tar.gz
    - step: Выпускаем релиз в виде папки
      class: release
    - step: Выпускаем релиз в виде zip-архива
      class: release
      archive: zip
    - step:  Выпускаем релиз в виде zip-архива с суффиксом release
      class: release
      archive: zip
      suffix: release
    - step:  Выпускаем релиз в виде  архива tar.gz
      class: release
      archive: tar.gz
    - step: Выпускаем релиз в виде архиве tar.gz с суффиксом release
      class: release
      archive: tar.gz
      suffix: release

